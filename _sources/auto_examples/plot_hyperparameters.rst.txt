

.. _sphx_glr_auto_examples_plot_hyperparameters.py:


============================
Influence of hyperparameters
============================

An example plot of :class:`skltemplate.template.TemplateClassifier`




.. image:: /auto_examples/images/sphx_glr_plot_hyperparameters_001.png
    :align: center





.. code-block:: python

    import numpy as np
    from numpy.testing import assert_almost_equal
    from sklearn.datasets import make_moons
    from sklearn.model_selection import train_test_split
    from matplotlib import pyplot as plt

    from exposing import Exposer

    n_samples = 10000
    ds = make_moons(noise=0.3, random_state=0, n_samples=n_samples)
    X, y = ds
    X_train, X_test, y_train, y_test = \
        train_test_split(X, y, test_size=.4, random_state=42)

    grains = [2, 4, 8, 16, 32, 64]
    a_stepss = [0, 1, 2, 3, 4, 5]

    fig, ax = plt.subplots(len(grains), len(a_stepss), figsize=(10, 10))
    for i, grain in enumerate(grains):
        for j, a_steps in enumerate(a_stepss):
            clf = Exposer(a_steps=a_steps, grain=grain)
            clf.fit(X_train, y_train)
            score = clf.score(X_test, y_test)
            ax[i, j].imshow(clf.rgb())
            ax[i, j].set_axis_off()
            ax[i, j].set_title("acc = %.3f" % score)

    plt.axis('off')
    plt.show()

**Total running time of the script:** ( 0 minutes  0.969 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_hyperparameters.py <plot_hyperparameters.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_hyperparameters.ipynb <plot_hyperparameters.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
